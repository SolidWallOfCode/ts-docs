%{
%}

%class ATS
%start Cache::idle


%map Cache
%%

idle {
    Cache::open_write(CacheKey: key) open_write {}
}

Finish {

}

open_write
    Entry { new_CacheVC(); lockStripe(); }
{
    lock_failed [! locked] CacheVC::openWriteStartBegin {}
    overwrite [f.overwrite] CacheVC::openWriteOverwrite {}
    write CacheVC::openWriteInit {}
}

%%

%map Vol
%%
Default {
    Default [locked] pop(LOCK_READY) {dispatch();}
}
%%

%map OpenDirEntry
%%

Default {
    Locked pop(LOCK_READY) {dispatch();}
}
%%

%map CacheVC
%%
openWriteStartBegin
    Entry { lock_stripe(); }
{
    unlocked push(dummy) {}
    dummy dummy {}
    LOCK_READY openWriteInit {}
}

dummy {
    lock  pop(LOCK_READY) {}
}

openWriteInit
    Entry { lock_od(); }
{
    unlocked [! locked] push(OpenDirEntry::Default) {}
}

openWriteOverwrite {

}
%%
