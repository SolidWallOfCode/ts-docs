@startuml

!define ACTIVE #BBDDFF
!define DONE #DDFFDD
!define FALLOW #FFDDFF
!define BLOCKED #FFCCCC

!definelong GenericComponent(TAG, TITLE, TEXT, STATE="")
  Component TAG STATE [
    **TITLE**
    ----
    TEXT
  ]
!enddefinelong

Component Errata ACTIVE [
  **Errata**
  ----
  Update the ""ts::Errata"" library
  to provide error reporting.
]

package "Cache Tools" {
  Component POC ACTIVE [
    **Partial Object Caching**
    ----
    Cache partial objects.
    Handling for
    * Stale While Revalidate
    * Stale While Error
  ]
  Component CacheTool ACTIVE [
    **Cache Tool**
    ----
    Examination of spans, stripes
    and directories.
    Manipulation of spans and stripes.
    Direct cache span initialization.
  ]
  Component CacheUpgrade [
    **Cache Internals Upgrade**
    ----
    More robust span / stripe handling.
    Remove dependency on AOS setting.
    Store critical span/stripe data on disk.
  ]
  Component CAT [
    **Cache API Toolkit**
    ----
    Plugin API for cache
    operation control.
  ]
  CAT ..> POC : Requires
  CAT --> CacheTool: After
  CacheUpgrade ..> CacheTool : Requires
}

package "Plugin Coordination" {
  Component ThreadInitialization DONE [
    **Thread Initialization**
    ----
    Restructure thread initialization
    to be modular and reliable.
  ]
  Component PluginHookFix ACTIVE [
    **Plugin Hook Restructure**
    ----
    Modularize hook dispatch.
  ]
  Component PluginTracking [
    **Plugin Tracking**
    ----
    Track source
    of continuations.
  ]
  Component PluginIntrospection [
    **Plugin Introspection**
    ----
    Enable plugins to discover
    and access other plugins.
  ]
  Component PluginControl [
    **Plugin Control**
    ----
    Enable plugins to control
    dispatch of other plugins
    callbacks. This includes
    inspecting and manipulating
    callbacks on hooks.
  ]
  Component PluginPriority [
    **Plugin Priority**
    ----
    Provide control of plugin
    callback ordering.
  ]
  note right of PluginPriority : Ready for production\ntesting in Y! ATS 5.3
  Component PluginReload [
    **Plugin Reload**
    ----
    Dynamically reload plugins.
  ]
  PluginTracking ..> PluginHookFix : Requires
  PluginTracking ..> ThreadInitialization : Requires
  PluginReload ..> PluginControl : Requires
  PluginReload --> PluginPriority : After
  PluginPriority ..> PluginIntrospection : Requires
  PluginControl ..> PluginIntrospection : Requires
  PluginIntrospection ..> PluginTracking : Requires
}

Package Logging {
  Component BufferWriter DONE [
   **BufferWriter**
   ----
   ""std::ostream"" like formatting to
   fixed buffers and MIOBuffers.
  ]
  Component IOBufferChain DONE [
    **IOBufferChain**
  ]
  Component BodyFactory ACTIVE [
    **MIOBuffer in BodyFactory**
    ----
    Use ""MIOBuffer"" in
    Body Factory.
  ]
  Component LogFormatAPI [
    **Log Formatting API**
    ----
    Enable plugins to generate text
    from logging formats using
    transaction data.
  ]
  Component PluginLogTags [
    **Plugin Log Tags**
    ----
    Enable logging tags that get
    text from a plugin.
  ]
  BodyFactory ..> BufferWriter : Requires
  BodyFactory ..> IOBufferChain : Requires
  LogFormatAPI ..> BodyFactory : Requires
  PluginLogTags ..> BodyFactory : Requires
}

package Testing {
  Component ReplayTesting ACTIVE [
    **Replay Testing**
    ----
    Replay captured live traffic.
  ]

  GenericComponent(TransactionTesting,"Transaction Testing", "Testing by directly using\nreplay files.", ACTIVE)

  Component TrafficCapture DONE [
    **Traffic Capture**
    ----
    Capture live traffic in
    session / transaction based
    format.
  ]

  GenericComponent(ProdValidator, "Production Validation", "Validate required properties of\nproduction servers.")

  Component ConfigTesting [
    **Configuration Testing**
    ----
    Validate correct functioning of
    a production configuration.
  ]

  ReplayTesting ..> TransactionTesting : Requires
  ReplayTesting ..> TrafficCapture : Requires
  ConfigTesting ..> ReplayTesting : Requires
  ProdValidator ..> ReplayTesting : Requires
}

package Core {
  Component Chrono FALLOW [
    **Use std::chrono**
    ----
    Change time mechanisms to use
    ""std::chrono"".
  ]

  GenericComponent(filesystem, "C++17 filesystem", "A simplified but compatible\nversion of the C++17\nfilesystem library")
  GenericComponent(cryptohash, "Crypo Hash Cleanup", "Better organized and more\nmodular crypto hash support")
  GenericComponent(live_restart, "Live Restart", "A mechanism to share the cache\nbetween two instances to\nallow live restarts")
  GenericComponent(compacting_arena, "MemArena",    "A memory block allocator for\nuse in allocating container\nobjects that provides compaction.", BLOCKED)
  GenericComponent(bijection, "Bijection", "An underorded bijection.\nA two way mapping between\nintegers and strings")

  bijection ..> compacting_arena : Requires
}

package Plugins {
  Component ExportTSLib BLOCKED [
    **Export TS Lib**
    ----
    Make more of the TS libraries
    available to plugins.
  ]
  Component PluginMgmt [
    **CLI Plugin Management**
    ----
    Extend the plugin message
    mechanism to provide management
    of plugins from the command line.
  ]
  Component CPPAPI [
    **CPP API**
    ----
    This needs refreshing and
    extension.
  ]

  GenericComponent(plugin_arena, "Transaction Arena", "A memory arena in the\nHttpSM for use by\nplugins")
}

' Fake links to control layout
Logging -[hidden]-- "Cache Tools"
"Cache Tools" -[hidden]-- "Plugin Coordination"

@enduml
