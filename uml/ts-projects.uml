@startuml

!define ACTIVE #DDDDFF
!define DONE #DDFFDD

package L7R {
  Component HostDB_L7 [
    Enable IP address resolution
    from an HTTP request.
  ]
  Component HostDB_Plugins [
    Provide plugin based control
    of IP address resolution.
  ]
  Component l7_resolver [
    Request Resolver
  ]
  Component L7R [
    Resolve upstream target
    from HTTP request.
  ]

  L7R ..> l7_resolver : Requires
}

package TsLuaConfig {
  Component TsLuaConfigSchemaParser [
    Parser for Lua
    configuration schemas.
    C++ code generator.
  ]
  Component TsLuaConfigMetaSchema [
    Lua schema that describes
    Lua configuration schema.
  ]
  Component TsLuaConfigInternals [
    Design of C++
    configuration code.
  ]
  TsLuaConfigSchemaParser ..> TsLuaConfigMetaSchema : Uses
  TsLuaConfigSchemaParser ..> TsLuaConfigInternals : Requires
  TsLuaConfigMetaSchema ..> TsLuaConfigSchemaParser : Generates
}

package L4R {
  Component L4R [
    Control connections based on
    L4 information
  ]

  Component TLS_Control [
    **TLS Control**
    ----
    SNI Based Configuration.
    TLS control during handshake.
    Post TLS-handshake handling.
  ]

  L4R ..> TLS_Control : Requires
  TLS_Control ..> TsLuaConfigInternals : Requires
}

package "Cache Tools" {
  Component POC [
    Partial Object Caching
  ]
  Component CacheTool [
    Cache Tool
  ]
  Component CAT [
    Cache API Toolkit
  ]
  CAT ..> POC : Requires
  CAT --> CacheTool: After
}

package "Plugin Coordination" {
  Component ThreadInitialization [
    **Thread Initialization**
    ----
    Restructure thread initialization
    to be modular and reliable.
  ]
  Component PluginHookFix [
    **Plugin Hook Restructure**
    ----
    Modularize hook dispatch.
  ]
  Component PluginTracking [
    **Plugin Tracking**
    ----
    Track source
    of continuations.
  ]
  Component PluginIntrospection [
    **Plugin Introspection**
    ----
    Enable plugins to discover
    and access other plugins.
  ]
  Component PluginControl [
    **Plugin Control**
    ----
    Enable plugins to control
    dispatch of other plugins
    callbacks.
  ]
  Component PluginPriority [
    **Plugin Priority**
    ----
    Provide control of plugin
    callback ordering.
  ]
  Component PluginReload [
    **Plugin Reload**
    ----
    Dynamically reload plugins.
  ]
  PluginTracking ..> PluginHookFix : Requires
  PluginTracking ..> ThreadInitialization : Requires
  PluginReload ..> PluginControl : Requires
  PluginReload --> PluginPriority : After
  PluginPriority ..> PluginIntrospection : Requires
  PluginControl ..> PluginIntrospection : Requires
  PluginIntrospection ..> PluginTracking : Requires
}

Package Logging {
  Component BufferWriter DONE [
    BufferWriter
  ]

  Component BodyFactory ACTIVE [
    Use ""MIOBuffer"" in
    Body Factory.
  ]
  BodyFactory ..> BufferWriter : Requires
}

' Fake links to control layout
"Plugin Coordination" -[hidden]l- L7R
"Plugin Coordination" -[hidden]l- L4R
"Plugin Coordination" -[hidden]- "Cache Tools"
L7R -[hidden]d-- L4R
@enduml

/'

  subgraph {
    RPC_refactor [shape=folder];
    RPC_library [shape=rect style=rounded];
    RPC_manager_no_delay [shape=rect style=rounded];
    RPC_bidirectional [shape=rect style=rounded];
    RPC_plugin [shape=rect style=rounded];

    RPC_refactor -> {RPC_library RPC_manager_no_delay RPC_bidirectional RPC_plugin};
    RPC_library -> RPC_manager_no_delay;
    RPC_library -> RPC_bidirectional;
    RPC_bidirectional -> RPC_plugin;
  }

}

digraph {
  live_restart [shape=folder]
}
'/
